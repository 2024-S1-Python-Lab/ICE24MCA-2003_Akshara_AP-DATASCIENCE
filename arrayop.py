# -*- coding: utf-8 -*-
"""ArrayOP.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FAvv6D71G7vjbDwl74z6yI_me3TH_jS_
"""



"""Basic array creation"""

import numpy as np
arrays=np.array([1,2,3,4,5,6])
print("Array from list:",arrays)

"""creating an array with range of values"""

import numpy as np
arrays=np.arange(1,11)
print("Array with range:",arrays)

import numpy as np
arrays=np.arange(10)
print("Array with range:",arrays)

"""creating an array of zeros"""

import numpy as np
zero=np.zeros((3,3))
print("Array of zeros:\n",zero)

"""creating an array of ones"""

one=np.ones((2,5))
print("Array of ones:\n",one)

"""array operations"""

import numpy as np
a=np.array([1,2,3])
b=np.array([4,5,6])

add_result=np.add(a,b)
print("sum:",add_result)

sub=np.subtract(a,b)
print(sub)
mul=np.multiply(a,b)
print(mul)
div=np.divide(a,b)
print(div)

"""Array reshaping"""

import numpy as np
array=np.arange(12)
print("Original array:",array)
rearray=array.reshape((3,4))
print("Reshaped to 3x4:\n",rearray)
rearrays=array.reshape((2,3,2))
print("Reshaped to 2X3X2:\n",rearrays)

"""indexing and slicing"""

import numpy as np
array2d=np.array([[1,2,3],[4,5,6],[7,8,9]])
print("2D Array:\n",array2d)
element=array2d[1,2]
print("Element at(1,2):",element)
subarray=array2d[1:3,0:2]
print("Sliced subarray:\n",subarray)
column=array2d[:,1]
print("column 1:",column)

"""program 2"""

import numpy as np
matrix1=np.array([[1,2,3],[4,5,6],[7,8,9]])
matrix2=np.array([[9,8,7],[6,5,4],[3,2,1]])
matrix_sum=matrix1+matrix2
matrix_diff=matrix1-matrix2
matrix_product=matrix1*matrix2
matrix_divide=matrix1/matrix2
matrix_multiply=np.dot(matrix1,matrix2)
matrix1_transpose=np.transpose(matrix1)
diagonal_sum=np.trace(matrix1)
print("Matrix 1:\n",matrix1)
print("Matrix 2:\n",matrix2)
print("Matrix sum:\n",matrix_sum)
print("Matrix Difference:\n",matrix_diff)
print("Matrix  Element-wise product:\n",matrix_product)
print("Matrix Element-wise division:\n",matrix_divide)
print("Matrix Multiplication:\n",matrix_multiply)
print("Matrix 1 Transpose:\n",matrix1_transpose)
print("Sum of Diagonal Elements of matrix1:\n",diagonal_sum)

"""statistical operations"""

import numpy as np
array=np.array([1,2,3,4,5,6,7,8,9,10])
mean=np.mean(array)
print("Mean:",mean)

median=np.median(array)
print("Median:",median)

sd=np.std(array)
print("Standard Deviation:",sd)

min=np.min(array)
max=np.max(array)
print("Minimum Value:",min)
print("Maximum Value:",max)

"""program 3"""

import numpy as np
X=np.array([[1,2],[3,4]])
Y=np.array([[5,6],[7,8]])
print("Matrix X is:\n",X)
print("Matrix Y is :\n",Y)
a=np.power(X,2)
print("X^2=",a)
result=a+2*Y
print("X^2+2*Y is:\n",result)

"""program 4"""

import numpy as np

tdarray = np.array([
    [1, 2, 3, 4],
    [5, 6, 7, 8],
    [9, 10, 11, 12],
    [13, 14, 15, 16]])

exr1 = tdarray[1:]
exlastcol = tdarray[:, :-1]

print("Array excluding last column:")
print(exlastcol)
print("Array excluding first row:")
print(exr1)

"""program 5"""

import numpy as np
from numpy import linalg

A=np.array([[2,1,-2],[3,0,1],[1,1,-1]])
b=np.array([-3,5,-2])
X=np.linalg.solve(A,b)
print("Matrix A")
print(A)
print("Vector b")
print(b)
print("Solution for X:")
print(X)